{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react/streams/client/src/components/streams/StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Edit a Stream\"), React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/mnt/d/react/streams/client/src/components/streams/StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKxCC,QALwC,GAK5BC,UAAD,IAAgB;AAC1B,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACA,KAPuC;AAAA;;AACxCK,EAAAA,iBAAiB,GAAG;AACnB,SAAKJ,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;AAMDE,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA;;AAED,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,UAAD;AACE,MAAA,aAAa,EAAEhB,CAAC,CAACiB,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKR,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAQA;;AAtBuC;;AAuBxC;;AAED,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACA,CAFD;;AAIA,eAAeX,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDE,UAAtD,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchStream(this.props.match.params.id);\r\n\t}\r\n\r\n\tonSubmit = (formValues) => {\r\n\t\tthis.props.editStream(this.props.match.params.id, formValues);\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (!this.props.stream) {\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Edit a Stream</h3>\r\n\t\t\t\t<StreamForm \r\n\t\t\t\t  initialValues={_.pick(this.props.stream, 'title', 'description')}\r\n\t\t\t\t  onSubmit={this.onSubmit} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}