{"ast":null,"code":"var _jsxFileName = \"/mnt/d/react/streams/client/src/components/streams/StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\n;\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.title) {\n    error.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    error.description = 'You must enter a description';\n  }\n\n  return error;\n};\n\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);","map":{"version":3,"sources":["/mnt/d/react/streams/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","Component","renderInput","input","label","meta","renderError","onSubmit","formValues","props","error","touched","render","handleSubmit","validate","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAWxCC,WAXwC,GAW1B,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACzC,aACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,KAAKG,WAAL,CAAiBD,IAAjB,CAHH,CADD;AAOA,KAnBuC;;AAAA,SAqBxCE,QArBwC,GAqB5BC,UAAD,IAAgB;AAC1B,WAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACA,KAvBuC;AAAA;;AACxCF,EAAAA,WAAW,CAAC;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAoB;AAC9B,QAAIA,OAAO,IAAID,KAAf,EAAsB;AACrB,aACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,KAAzB,CADF,CADD;AAKA;AACD;;AAgBDE,EAAAA,MAAM,GAAG;AACR,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKL,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADD;AAOA;;AAjCuC;;AAkCxC;;AAED,MAAMY,QAAQ,GAAIN,UAAD,IAAgB;AAChC,QAAME,KAAK,GAAG,EAAd;;AAEA,MAAI,CAACF,UAAU,CAACO,KAAhB,EAAuB;AACtBL,IAAAA,KAAK,CAACK,KAAN,GAAc,wBAAd;AACA;;AACD,MAAI,CAACP,UAAU,CAACQ,WAAhB,EAA6B;AAC5BN,IAAAA,KAAK,CAACM,WAAN,GAAoB,8BAApB;AACA;;AACD,SAAON,KAAP;AACA,CAVD;;AAYA,eAAeX,SAAS,CAAE;AAAEkB,EAAAA,IAAI,EAAE,YAAR;AAAsBH,EAAAA;AAAtB,CAAF,CAAT,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n\trenderError({ error, touched}) {\r\n\t\tif (touched && error) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"ui error message\">\r\n\t\t\t\t  <div className=\"header\">{error}</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trenderInput = ({ input, label, meta }) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"field\">\r\n\t\t\t  <label>{label}</label>\r\n\t\t\t  <input {...input} autoComplete=\"off\" />\r\n\t\t\t  {this.renderError(meta)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tonSubmit = (formValues) => {\r\n\t\tthis.props.onSubmit(formValues);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n\t\t\t  <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n\t\t\t  <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n\t\t\t  <button className=\"ui button primary\">Submit</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst validate = (formValues) => {\r\n\tconst error = {};\r\n\r\n\tif (!formValues.title) {\r\n\t\terror.title = 'You must enter a title';\r\n\t}\r\n\tif (!formValues.description) {\r\n\t\terror.description = 'You must enter a description';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nexport default reduxForm ({ form: 'streamForm', validate })(StreamForm);\r\n"]},"metadata":{},"sourceType":"module"}